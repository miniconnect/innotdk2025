package hu.webarticum.inno.paperdatabase.abstractgenerator.model.keyword;

import java.util.Arrays;

import hu.webarticum.inno.paperdatabase.abstractgenerator.model.Keyword;
import hu.webarticum.inno.paperdatabase.abstractgenerator.model.PlaceholderType;

public enum KeywordEnum {
    
    AI("Artificial Intelligence",
            typeCase(PlaceholderType.AREA,
                    new String[] {
                            "automated planning", "cognitive architectures", "expert systems",
                            "intelligent agents", "knowledge representation", "symbolic reasoning",
                    },
                    new String[] { "(adaptive|general|[dtg][yeo][nmpr]amyc)? [bcdhnptw][aeio][lntr]{1,2}[ei][nlr]ing" }),
            typeCase(PlaceholderType.DIFFICULTY,
                    new String[] {
                            "alignment", "catastrophic forgetting",
                            "explainability gap", "symbol grounding", "transfer",
                    },
                    new String[] { "(irr|(de|in|un)[cmt])[eiu][bdst]((ab)?ility)", "[A-F]{2}\\-(bias|drift|erosion)" }),
            typeCase(PlaceholderType.METHOD,
                    new String[] {
                            "symbolic reasoning", "knowledge graph inference", "heuristic search",
                            "Bayesian learning", "constraint satisfaction", "case-based reasoning",
                    },
                    new String[] { "[bdghtsw][aeiou][lnr][kt]ing (search|planning|[brw](oo|[aeiu])[mn]n?[ey]sis)" }),
            typeCase(PlaceholderType.ITEM,
                    new String[] {
                            "decision support system", "expert module", "intelligent agent", "knowledge base",
                            "language model", "planning system", "reasoning engine",
                    },
                    new String[] { "[ACEFK]{1,2}[1-9]\\-(agent|net|planner)" }),
            typeCase(PlaceholderType.PRODUCE,
                    new String[] { "classify", "diagnose", "generate", "plan" },
                    new String[] { "(de|in|re)?[cdgk][aeou][mnl](ify|ese|ate)" })),
    
    ALGORITHMS("Algorithms",
            typeCase(PlaceholderType.AREA,
                    new String[] {
                            "algorithm optimization", "algorithm parallelization", "automata theory",
                            "randomized algorithms", "graph algorithms", "sorting and searching", "pattern matching",
                    },
                    new String[] {
                            "(dynamic|distributed|iterative) [cdgt][aeiouy][gpt]h?[aei][lnr]ing",
                            "[dpt][aeo]r[tm][ae]t(ic|ed|ive) (multi|sub|hyper|quasi)?[cdgt][aeiouy][gpt]h?[aei][lnr]ing",
                    }),
            typeCase(PlaceholderType.DIFFICULTY,
                    new String[] {
                            "combinatorial explosion", "latency constraints", "memory bottleneck", "NP-hardness",
                            "resource consumption", "scalability issues", "state space explosion",
                    },
                    new String[] {
                            "(mis|over|under)?([gpt]h)[aeo][lnr][gt](edness|ing)",
                            "[BCKST]([aeo][rl]){1,2}sk[iy]\\-(bound|budget|delay|limit|overhead)",
                            "[AE][dnmr][ls](son|s?en|y)\\-(bound|budget|delay|limit|overhead)",
                            "[dkr]([aeiouy][bcdklnpsz]){2,4}[aiu]?[crm] (bound|budget|delay|limit|overhead)",
                    }),
            typeCase(PlaceholderType.METHOD,
                    new String[] {
                            "constraint-solver", "divide-and-conquer method", "dynamic programming", "genetic algorithm",
                            "graph traversal", "local search algorithm", "randomized rounding", "tabu search algorithm",
                    },
                    new String[] {
                            "(alpha|beta|gamma)\\-[bdkmp]?[aeiou][lrny]h[dtg]ing",
                            "(adaptive|iterative|multi|two|three|k)-phase (scheme|pipeline|routine|strategy)",
                            "[ACEFGIK]{1,2}\\d{1,2}\\-((based|driven|guided|style) ((chain|graph|tree) )?)?(exploration|propagation|refinement|search)",
                            "[BKSTWY][aeiou][lnr]?[dg]?(sen|sk[iy]|son|art)\\-(flipping|scan|scheduling|shuffling)",
                            "[ABKTUW]{1,2}\\d\\-(refinement|scan|search|sorting|traversal)",
                    }),
            typeCase(PlaceholderType.ITEM,
                    new String[] {
                            "colored graph", "B-tree", "B+tree", "directed acyclic graph", "hash table", "priority queue",
                    },
                    new String[] { }),
            typeCase(PlaceholderType.PRODUCE,
                    new String[] { "calculate", "process", "search", "select" },
                    new String[] { })),

    ASTRO_INSTR("Astronomical Instrumentation",
            typeCase(PlaceholderType.AREA,
                    new String[] { "lorem" },
                    new String[] {  }),
            typeCase(PlaceholderType.DIFFICULTY,
                    new String[] { "lorem" },
                    new String[] {  }),
            typeCase(PlaceholderType.METHOD,
                    new String[] { "lorem" },
                    new String[] {  }),
            typeCase(PlaceholderType.ITEM,
                    new String[] { "lorem" },
                    new String[] {  }),
            typeCase(PlaceholderType.PRODUCE,
                    new String[] { "lorem" },
                    new String[] {  })),

    ASTROPHYSICS("Astrophysics",
            typeCase(PlaceholderType.AREA,
                    new String[] { "lorem" },
                    new String[] {  }),
            typeCase(PlaceholderType.DIFFICULTY,
                    new String[] { "lorem" },
                    new String[] {  }),
            typeCase(PlaceholderType.METHOD,
                    new String[] { "lorem" },
                    new String[] {  }),
            typeCase(PlaceholderType.ITEM,
                    new String[] { "lorem" },
                    new String[] {  }),
            typeCase(PlaceholderType.PRODUCE,
                    new String[] { "lorem" },
                    new String[] {  })),

    CATALYSIS("Catalysis",
            typeCase(PlaceholderType.AREA,
                    new String[] { "lorem" },
                    new String[] {  }),
            typeCase(PlaceholderType.DIFFICULTY,
                    new String[] { "lorem" },
                    new String[] {  }),
            typeCase(PlaceholderType.METHOD,
                    new String[] { "lorem" },
                    new String[] {  }),
            typeCase(PlaceholderType.ITEM,
                    new String[] { "lorem" },
                    new String[] {  }),
            typeCase(PlaceholderType.PRODUCE,
                    new String[] { "lorem" },
                    new String[] {  })),

    COMPILERS("Compilers",
            typeCase(PlaceholderType.AREA,
                    new String[] { "lorem" },
                    new String[] {  }),
            typeCase(PlaceholderType.DIFFICULTY,
                    new String[] { "lorem" },
                    new String[] {  }),
            typeCase(PlaceholderType.METHOD,
                    new String[] { "lorem" },
                    new String[] {  }),
            typeCase(PlaceholderType.ITEM,
                    new String[] { "lorem" },
                    new String[] {  }),
            typeCase(PlaceholderType.PRODUCE,
                    new String[] { "lorem" },
                    new String[] {  })),

    COMPUTER_VIS("Computer Vision",
            typeCase(PlaceholderType.AREA,
                    new String[] { "lorem" },
                    new String[] {  }),
            typeCase(PlaceholderType.DIFFICULTY,
                    new String[] { "lorem" },
                    new String[] {  }),
            typeCase(PlaceholderType.METHOD,
                    new String[] { "lorem" },
                    new String[] {  }),
            typeCase(PlaceholderType.ITEM,
                    new String[] { "lorem" },
                    new String[] {  }),
            typeCase(PlaceholderType.PRODUCE,
                    new String[] { "lorem" },
                    new String[] {  })),

    CONDENSED_MAT("Condensed Matter",
            typeCase(PlaceholderType.AREA,
                    new String[] { "lorem" },
                    new String[] {  }),
            typeCase(PlaceholderType.DIFFICULTY,
                    new String[] { "lorem" },
                    new String[] {  }),
            typeCase(PlaceholderType.METHOD,
                    new String[] { "lorem" },
                    new String[] {  }),
            typeCase(PlaceholderType.ITEM,
                    new String[] { "lorem" },
                    new String[] {  }),
            typeCase(PlaceholderType.PRODUCE,
                    new String[] { "lorem" },
                    new String[] {  })),

    CONTROL_THEORY("Control Theory",
            typeCase(PlaceholderType.AREA,
                    new String[] { "lorem" },
                    new String[] {  }),
            typeCase(PlaceholderType.DIFFICULTY,
                    new String[] { "lorem" },
                    new String[] {  }),
            typeCase(PlaceholderType.METHOD,
                    new String[] { "lorem" },
                    new String[] {  }),
            typeCase(PlaceholderType.ITEM,
                    new String[] { "lorem" },
                    new String[] {  }),
            typeCase(PlaceholderType.PRODUCE,
                    new String[] { "lorem" },
                    new String[] {  })),

    CRYPTOGRAPHY("Cryptography",
            typeCase(PlaceholderType.AREA,
                    new String[] { "lorem" },
                    new String[] {  }),
            typeCase(PlaceholderType.DIFFICULTY,
                    new String[] { "lorem" },
                    new String[] {  }),
            typeCase(PlaceholderType.METHOD,
                    new String[] { "lorem" },
                    new String[] {  }),
            typeCase(PlaceholderType.ITEM,
                    new String[] { "lorem" },
                    new String[] {  }),
            typeCase(PlaceholderType.PRODUCE,
                    new String[] { "lorem" },
                    new String[] {  })),

    DATA_PRIVACY("Data Privacy",
            typeCase(PlaceholderType.AREA,
                    new String[] { "lorem" },
                    new String[] {  }),
            typeCase(PlaceholderType.DIFFICULTY,
                    new String[] { "lorem" },
                    new String[] {  }),
            typeCase(PlaceholderType.METHOD,
                    new String[] { "lorem" },
                    new String[] {  }),
            typeCase(PlaceholderType.ITEM,
                    new String[] { "lorem" },
                    new String[] {  }),
            typeCase(PlaceholderType.PRODUCE,
                    new String[] { "lorem" },
                    new String[] {  })),

    DATA_STRUCTS("Data Structures",
            typeCase(PlaceholderType.AREA,
                    new String[] { "lorem" },
                    new String[] {  }),
            typeCase(PlaceholderType.DIFFICULTY,
                    new String[] { "lorem" },
                    new String[] {  }),
            typeCase(PlaceholderType.METHOD,
                    new String[] { "lorem" },
                    new String[] {  }),
            typeCase(PlaceholderType.ITEM,
                    new String[] { "lorem" },
                    new String[] {  }),
            typeCase(PlaceholderType.PRODUCE,
                    new String[] { "lorem" },
                    new String[] {  })),

    DATABASES("Databases",
            typeCase(PlaceholderType.AREA,
                    new String[] { "lorem" },
                    new String[] {  }),
            typeCase(PlaceholderType.DIFFICULTY,
                    new String[] { "lorem" },
                    new String[] {  }),
            typeCase(PlaceholderType.METHOD,
                    new String[] { "lorem" },
                    new String[] {  }),
            typeCase(PlaceholderType.ITEM,
                    new String[] { "lorem" },
                    new String[] {  }),
            typeCase(PlaceholderType.PRODUCE,
                    new String[] { "lorem" },
                    new String[] {  })),

    DISTRIBUTED("Distributed Systems",
            typeCase(PlaceholderType.AREA,
                    new String[] { "lorem" },
                    new String[] {  }),
            typeCase(PlaceholderType.DIFFICULTY,
                    new String[] { "lorem" },
                    new String[] {  }),
            typeCase(PlaceholderType.METHOD,
                    new String[] { "lorem" },
                    new String[] {  }),
            typeCase(PlaceholderType.ITEM,
                    new String[] { "lorem" },
                    new String[] {  }),
            typeCase(PlaceholderType.PRODUCE,
                    new String[] { "lorem" },
                    new String[] {  })),

    ELECTROCHEM("Electrochemistry",
            typeCase(PlaceholderType.AREA,
                    new String[] { "lorem" },
                    new String[] {  }),
            typeCase(PlaceholderType.DIFFICULTY,
                    new String[] { "lorem" },
                    new String[] {  }),
            typeCase(PlaceholderType.METHOD,
                    new String[] { "lorem" },
                    new String[] {  }),
            typeCase(PlaceholderType.ITEM,
                    new String[] { "lorem" },
                    new String[] {  }),
            typeCase(PlaceholderType.PRODUCE,
                    new String[] { "lorem" },
                    new String[] {  })),

    EMBEDDED("Embedded Systems",
            typeCase(PlaceholderType.AREA,
                    new String[] { "lorem" },
                    new String[] {  }),
            typeCase(PlaceholderType.DIFFICULTY,
                    new String[] { "lorem" },
                    new String[] {  }),
            typeCase(PlaceholderType.METHOD,
                    new String[] { "lorem" },
                    new String[] {  }),
            typeCase(PlaceholderType.ITEM,
                    new String[] { "lorem" },
                    new String[] {  }),
            typeCase(PlaceholderType.PRODUCE,
                    new String[] { "lorem" },
                    new String[] {  })),

    EPIDEMIOLOGY("Epidemiology Modeling",
            typeCase(PlaceholderType.AREA,
                    new String[] { "lorem" },
                    new String[] {  }),
            typeCase(PlaceholderType.DIFFICULTY,
                    new String[] { "lorem" },
                    new String[] {  }),
            typeCase(PlaceholderType.METHOD,
                    new String[] { "lorem" },
                    new String[] {  }),
            typeCase(PlaceholderType.ITEM,
                    new String[] { "lorem" },
                    new String[] {  }),
            typeCase(PlaceholderType.PRODUCE,
                    new String[] { "lorem" },
                    new String[] {  })),

    EXOPLANETS("Exoplanets",
            typeCase(PlaceholderType.AREA,
                    new String[] { "lorem" },
                    new String[] {  }),
            typeCase(PlaceholderType.DIFFICULTY,
                    new String[] { "lorem" },
                    new String[] {  }),
            typeCase(PlaceholderType.METHOD,
                    new String[] { "lorem" },
                    new String[] {  }),
            typeCase(PlaceholderType.ITEM,
                    new String[] { "lorem" },
                    new String[] {  }),
            typeCase(PlaceholderType.PRODUCE,
                    new String[] { "lorem" },
                    new String[] {  })),

    VERIFICATION("Formal Verification",
            typeCase(PlaceholderType.AREA,
                    new String[] { "lorem" },
                    new String[] {  }),
            typeCase(PlaceholderType.DIFFICULTY,
                    new String[] { "lorem" },
                    new String[] {  }),
            typeCase(PlaceholderType.METHOD,
                    new String[] { "lorem" },
                    new String[] {  }),
            typeCase(PlaceholderType.ITEM,
                    new String[] { "lorem" },
                    new String[] {  }),
            typeCase(PlaceholderType.PRODUCE,
                    new String[] { "lorem" },
                    new String[] {  })),

    GENOMICS("Genomics",
            typeCase(PlaceholderType.AREA,
                    new String[] { "lorem" },
                    new String[] {  }),
            typeCase(PlaceholderType.DIFFICULTY,
                    new String[] { "lorem" },
                    new String[] {  }),
            typeCase(PlaceholderType.METHOD,
                    new String[] { "lorem" },
                    new String[] {  }),
            typeCase(PlaceholderType.ITEM,
                    new String[] { "lorem" },
                    new String[] {  }),
            typeCase(PlaceholderType.PRODUCE,
                    new String[] { "lorem" },
                    new String[] {  })),

    GRAPH_THEORY("Graph Theory",
            typeCase(PlaceholderType.AREA,
                    new String[] { "lorem" },
                    new String[] {  }),
            typeCase(PlaceholderType.DIFFICULTY,
                    new String[] { "lorem" },
                    new String[] {  }),
            typeCase(PlaceholderType.METHOD,
                    new String[] { "lorem" },
                    new String[] {  }),
            typeCase(PlaceholderType.ITEM,
                    new String[] { "lorem" },
                    new String[] {  }),
            typeCase(PlaceholderType.PRODUCE,
                    new String[] { "lorem" },
                    new String[] {  })),

    ML("Machine Learning",
            typeCase(PlaceholderType.AREA,
                    new String[] { "lorem" },
                    new String[] {  }),
            typeCase(PlaceholderType.DIFFICULTY,
                    new String[] { "lorem" },
                    new String[] {  }),
            typeCase(PlaceholderType.METHOD,
                    new String[] { "lorem" },
                    new String[] {  }),
            typeCase(PlaceholderType.ITEM,
                    new String[] { "lorem" },
                    new String[] {  }),
            typeCase(PlaceholderType.PRODUCE,
                    new String[] { "lorem" },
                    new String[] {  })),

    MATERIALS_MOD("Materials Modeling",
            typeCase(PlaceholderType.AREA,
                    new String[] { "lorem" },
                    new String[] {  }),
            typeCase(PlaceholderType.DIFFICULTY,
                    new String[] { "lorem" },
                    new String[] {  }),
            typeCase(PlaceholderType.METHOD,
                    new String[] { "lorem" },
                    new String[] {  }),
            typeCase(PlaceholderType.ITEM,
                    new String[] { "lorem" },
                    new String[] {  }),
            typeCase(PlaceholderType.PRODUCE,
                    new String[] { "lorem" },
                    new String[] {  })),

    MED_IMAGING("Medical Imaging",
            typeCase(PlaceholderType.AREA,
                    new String[] { "lorem" },
                    new String[] {  }),
            typeCase(PlaceholderType.DIFFICULTY,
                    new String[] { "lorem" },
                    new String[] {  }),
            typeCase(PlaceholderType.METHOD,
                    new String[] { "lorem" },
                    new String[] {  }),
            typeCase(PlaceholderType.ITEM,
                    new String[] { "lorem" },
                    new String[] {  }),
            typeCase(PlaceholderType.PRODUCE,
                    new String[] { "lorem" },
                    new String[] {  })),

    MOLECULAR_MOD("Molecular Modeling",
            typeCase(PlaceholderType.AREA,
                    new String[] { "lorem" },
                    new String[] {  }),
            typeCase(PlaceholderType.DIFFICULTY,
                    new String[] { "lorem" },
                    new String[] {  }),
            typeCase(PlaceholderType.METHOD,
                    new String[] { "lorem" },
                    new String[] {  }),
            typeCase(PlaceholderType.ITEM,
                    new String[] { "lorem" },
                    new String[] {  }),
            typeCase(PlaceholderType.PRODUCE,
                    new String[] { "lorem" },
                    new String[] {  })),

    NLP("Natural Language Processing",
            typeCase(PlaceholderType.AREA,
                    new String[] { "lorem" },
                    new String[] {  }),
            typeCase(PlaceholderType.DIFFICULTY,
                    new String[] { "lorem" },
                    new String[] {  }),
            typeCase(PlaceholderType.METHOD,
                    new String[] { "lorem" },
                    new String[] {  }),
            typeCase(PlaceholderType.ITEM,
                    new String[] { "lorem" },
                    new String[] {  }),
            typeCase(PlaceholderType.PRODUCE,
                    new String[] { "lorem" },
                    new String[] {  })),

    NEUROSCIENCE("Neuroscience",
            typeCase(PlaceholderType.AREA,
                    new String[] { "lorem" },
                    new String[] {  }),
            typeCase(PlaceholderType.DIFFICULTY,
                    new String[] { "lorem" },
                    new String[] {  }),
            typeCase(PlaceholderType.METHOD,
                    new String[] { "lorem" },
                    new String[] {  }),
            typeCase(PlaceholderType.ITEM,
                    new String[] { "lorem" },
                    new String[] {  }),
            typeCase(PlaceholderType.PRODUCE,
                    new String[] { "lorem" },
                    new String[] {  })),

    NUM_ANALYSIS("Numerical Analysis",
            typeCase(PlaceholderType.AREA,
                    new String[] { "lorem" },
                    new String[] {  }),
            typeCase(PlaceholderType.DIFFICULTY,
                    new String[] { "lorem" },
                    new String[] {  }),
            typeCase(PlaceholderType.METHOD,
                    new String[] { "lorem" },
                    new String[] {  }),
            typeCase(PlaceholderType.ITEM,
                    new String[] { "lorem" },
                    new String[] {  }),
            typeCase(PlaceholderType.PRODUCE,
                    new String[] { "lorem" },
                    new String[] {  })),

    OPTIMIZATION("Optimization",
            typeCase(PlaceholderType.AREA,
                    new String[] { "lorem" },
                    new String[] {  }),
            typeCase(PlaceholderType.DIFFICULTY,
                    new String[] { "lorem" },
                    new String[] {  }),
            typeCase(PlaceholderType.METHOD,
                    new String[] { "lorem" },
                    new String[] {  }),
            typeCase(PlaceholderType.ITEM,
                    new String[] { "lorem" },
                    new String[] {  }),
            typeCase(PlaceholderType.PRODUCE,
                    new String[] { "lorem" },
                    new String[] {  })),

    OS("Operating Systems",
            typeCase(PlaceholderType.AREA,
                    new String[] { "lorem" },
                    new String[] {  }),
            typeCase(PlaceholderType.DIFFICULTY,
                    new String[] { "lorem" },
                    new String[] {  }),
            typeCase(PlaceholderType.METHOD,
                    new String[] { "lorem" },
                    new String[] {  }),
            typeCase(PlaceholderType.ITEM,
                    new String[] { "lorem" },
                    new String[] {  }),
            typeCase(PlaceholderType.PRODUCE,
                    new String[] { "lorem" },
                    new String[] {  })),

    PROBABILITY("Probability Theory",
            typeCase(PlaceholderType.AREA,
                    new String[] { "lorem" },
                    new String[] {  }),
            typeCase(PlaceholderType.DIFFICULTY,
                    new String[] { "lorem" },
                    new String[] {  }),
            typeCase(PlaceholderType.METHOD,
                    new String[] { "lorem" },
                    new String[] {  }),
            typeCase(PlaceholderType.ITEM,
                    new String[] { "lorem" },
                    new String[] {  }),
            typeCase(PlaceholderType.PRODUCE,
                    new String[] { "lorem" },
                    new String[] {  })),

    QC("Quantum Computing",
            typeCase(PlaceholderType.AREA,
                    new String[] { "lorem" },
                    new String[] {  }),
            typeCase(PlaceholderType.DIFFICULTY,
                    new String[] { "lorem" },
                    new String[] {  }),
            typeCase(PlaceholderType.METHOD,
                    new String[] { "lorem" },
                    new String[] {  }),
            typeCase(PlaceholderType.ITEM,
                    new String[] { "lorem" },
                    new String[] {  }),
            typeCase(PlaceholderType.PRODUCE,
                    new String[] { "lorem" },
                    new String[] {  })),

    RELIABILITY("Reliability Engineering",
            typeCase(PlaceholderType.AREA,
                    new String[] { "lorem" },
                    new String[] {  }),
            typeCase(PlaceholderType.DIFFICULTY,
                    new String[] { "lorem" },
                    new String[] {  }),
            typeCase(PlaceholderType.METHOD,
                    new String[] { "lorem" },
                    new String[] {  }),
            typeCase(PlaceholderType.ITEM,
                    new String[] { "lorem" },
                    new String[] {  }),
            typeCase(PlaceholderType.PRODUCE,
                    new String[] { "lorem" },
                    new String[] {  })),

    ROBOTICS("Robotics",
            typeCase(PlaceholderType.AREA,
                    new String[] { "lorem" },
                    new String[] {  }),
            typeCase(PlaceholderType.DIFFICULTY,
                    new String[] { "lorem" },
                    new String[] {  }),
            typeCase(PlaceholderType.METHOD,
                    new String[] { "lorem" },
                    new String[] {  }),
            typeCase(PlaceholderType.ITEM,
                    new String[] { "lorem" },
                    new String[] {  }),
            typeCase(PlaceholderType.PRODUCE,
                    new String[] { "lorem" },
                    new String[] {  })),

    SIGNAL_PROC("Signal Processing",
            typeCase(PlaceholderType.AREA,
                    new String[] { "lorem" },
                    new String[] {  }),
            typeCase(PlaceholderType.DIFFICULTY,
                    new String[] { "lorem" },
                    new String[] {  }),
            typeCase(PlaceholderType.METHOD,
                    new String[] { "lorem" },
                    new String[] {  }),
            typeCase(PlaceholderType.ITEM,
                    new String[] { "lorem" },
                    new String[] {  }),
            typeCase(PlaceholderType.PRODUCE,
                    new String[] { "lorem" },
                    new String[] {  })),

    SPECTROSCOPY("Spectroscopy",
            typeCase(PlaceholderType.AREA,
                    new String[] { "lorem" },
                    new String[] {  }),
            typeCase(PlaceholderType.DIFFICULTY,
                    new String[] { "lorem" },
                    new String[] {  }),
            typeCase(PlaceholderType.METHOD,
                    new String[] { "lorem" },
                    new String[] {  }),
            typeCase(PlaceholderType.ITEM,
                    new String[] { "lorem" },
                    new String[] {  }),
            typeCase(PlaceholderType.PRODUCE,
                    new String[] { "lorem" },
                    new String[] {  })),

    SYS_BIOLOGY("Systems Biology",
            typeCase(PlaceholderType.AREA,
                    new String[] { "lorem" },
                    new String[] {  }),
            typeCase(PlaceholderType.DIFFICULTY,
                    new String[] { "lorem" },
                    new String[] {  }),
            typeCase(PlaceholderType.METHOD,
                    new String[] { "lorem" },
                    new String[] {  }),
            typeCase(PlaceholderType.ITEM,
                    new String[] { "lorem" },
                    new String[] {  }),
            typeCase(PlaceholderType.PRODUCE,
                    new String[] { "lorem" },
                    new String[] {  })),

    T_SERIES("Time-Series Analysis",
            typeCase(PlaceholderType.AREA,
                    new String[] { "lorem" },
                    new String[] {  }),
            typeCase(PlaceholderType.DIFFICULTY,
                    new String[] { "lorem" },
                    new String[] {  }),
            typeCase(PlaceholderType.METHOD,
                    new String[] { "lorem" },
                    new String[] {  }),
            typeCase(PlaceholderType.ITEM,
                    new String[] { "lorem" },
                    new String[] {  }),
            typeCase(PlaceholderType.PRODUCE,
                    new String[] { "lorem" },
                    new String[] {  })),

    ;
    
    private final Keyword keyword;
    
    private KeywordEnum(String longLabel, PlaceholderTypeWordsSpec... placeholderTypeWordsSpecs) {
        this.keyword = new DefaultKeyword(getNormalizedLabel(), longLabel, Arrays.asList(placeholderTypeWordsSpecs));
    }

    private String getNormalizedLabel() {
        return name().toLowerCase().replace("_", "-");
    }

    public Keyword keyword() {
        return keyword;
    }
    
    private static PlaceholderTypeWordsSpec typeCase(PlaceholderType placeholderType, String[] fixedStrings, String[] regexes) {
        return new PlaceholderTypeWordsSpec(placeholderType, fixedStrings, regexes);
    }

}
